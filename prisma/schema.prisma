// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model stats {
  statsId   BigInt   @id @default(autoincrement())
  // hp equals the base_stat for the hp stat
  hp        BigInt?
  // attack equals the base_stat for the attack stat
  attack    BigInt?
  // defense equals the base_stat for the defense stat
  defense   BigInt?
  // speed equals the base_stat for the speed stat
  speed     BigInt?
  pokemon   pokemon? @relation(fields: [pokemonId], references: [pokemonId])
  pokemonId BigInt?
}

model types {
  typesId   BigInt   @id @default(autoincrement())
  typeOne   String?
  typeTwo   String?
  pokemon   pokemon? @relation(fields: [pokemonId], references: [pokemonId])
  pokemonId BigInt?
}

model sprites {
  spritesId       BigInt   @id @default(autoincrement())
  // other/dream_world/front_default image URL
  dreamDefault    String?
  // other/home/front_default image URL
  homeDefault     String?
  // other/home/front_shiny image URL
  homeShiny       String?
  // other/official-artwork/front_default image URL
  officialDefault String?
  // other/official-artwork/front_shiny image URL
  officialShiny   String?
  pokemon         pokemon? @relation(fields: [pokemonId], references: [pokemonId])
  pokemonId       BigInt?
}

model descriptions {
  descriptionsId BigInt   @id @default(autoincrement())
  description    String?
  pokemon        pokemon? @relation(fields: [pokemonId], references: [pokemonId])
  pokemonId      BigInt?
}

model pokemon {
  pokemonId      BigInt         @id
  name           String
  // price equals capture_rate (from details) times rarity
  price          BigInt
  rarity         BigInt
  count          BigInt
  statsId        stats[]
  typesId        types[]
  spritesId      sprites[]
  descriptionsId descriptions[]
  cart           cart_pokemon[]
}

model cart_pokemon {
  id        BigInt   @id @default(autoincrement())
  pokemon   pokemon? @relation(fields: [pokemonId], references: [pokemonId])
  cart      cart?    @relation(fields: [cartId], references: [cartId])
  cartId    BigInt?
  pokemonId BigInt?
}

model cart {
  cartId  BigInt         @id @default(autoincrement())
  count   BigInt
  pokemon cart_pokemon[]
  user    order[]
}

model order {
  orderId BigInt  @id @default(autoincrement())
  user    user?   @relation(fields: [userId], references: [userId])
  userId  BigInt?
  cart    cart?   @relation(fields: [cartId], references: [cartId])
  cartId  BigInt?
}

model user {
  userId           BigInt   @id @default(autoincrement())
  firstAndLastName String
  email            String   @unique
  username         String   @unique
  password         String
  isAdmin          Boolean?
  cart             order[]
}
